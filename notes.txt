Kraven för Labrationen
För G:

    1. Webbanrop och visning av data: Du gör webbanrop till https://date.nager.at/api/v3/AvailableCountries för att hämta länder och https://date.nager.at/api/v3/publicholidays/${new Date().getFullYear()}/${this.countryCode} för att hämta helgdagar. Dessa visas sedan i webbapplikationen.

    2. Textinterpolering: Används korrekt i flera komponenter för att infoga dynamiskt innehåll.

    3. Attributinterpolering: Används för att dynamiskt skapa router-länkar och binda till komponentdata.

    4. Villkorlig rendering: Används med v-if för att visa eller dölja innehåll baserat på villkor.

    5. Listrendering: Används med v-for för att loopa igenom en lista av länder och helgdagar.
    Händelser: Används med v-on för att lyssna på händelser och reagera på dem, till exempel när användaren klickar på knappar eller länkar.

    6. v-model: Används för att skapa tvåvägskoppling mellan användarinmatning och komponentdata.

    7. SPA med Vue Router: Du använder Vue Router för att skapa en Single Page Application med minst två sidor.

    8. Icke-Vue-Router-komponent: Du har en komponent CountryList.vue som inte är en "view" som används med Vue Router.

    9. Props-användning: Du skickar och använder props korrekt i flera komponenter.

För VG:

    1. Användning av Axios: Du använder Axios för att göra webbanrop istället för fetch.

    2. Beräknad egenskap (computed): Du har en beräknad egenskap filteredHolidays i SearchHoliday.vue.

    3.Bevakare (watch): Används för att övervaka förändringar i countryCode och date i HolidayDetails.vue.

    4. Typsäkerhet för props: Du specificerar typer för props i HolidayDetails.vue.

    5. Custom event: Det verkar som om det saknas en implementation för ett custom event.

    6. Vue Router-adressparametervärde: Du använder adressparametervärden i Vue Router för att navigera till specifika sidor baserat på land och datum.
